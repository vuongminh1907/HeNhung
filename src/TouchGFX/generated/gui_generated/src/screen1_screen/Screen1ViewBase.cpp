/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 240, 320);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    scalableImage1.setBitmap(touchgfx::Bitmap(BITMAP_GLASS_THEME_IMAGES_BACKGROUNDS_272X480_TRIANGULAR_DISCO_ID));
    scalableImage1.setPosition(-26, 0, 266, 387);
    scalableImage1.setScalingAlgorithm(touchgfx::ScalableImage::NEAREST_NEIGHBOR);
    add(scalableImage1);

    buttonStart.setXY(70, 175);
    buttonStart.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_ACTION_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    buttonStart.setLabelText(touchgfx::TypedText(T___SINGLEUSE_O949));
    buttonStart.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonStart.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonStart.setAction(buttonCallback);
    add(buttonStart);

    buttonReset.setXY(70, 227);
    buttonReset.setBitmaps(touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_NORMAL_ID), touchgfx::Bitmap(BITMAP_ALTERNATE_THEME_IMAGES_WIDGETS_BUTTON_REGULAR_HEIGHT_36_TINY_ROUND_PRESSED_ID));
    buttonReset.setLabelText(touchgfx::TypedText(T___SINGLEUSE_6R0U));
    buttonReset.setLabelColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonReset.setLabelColorPressed(touchgfx::Color::getColorFromRGB(255, 255, 255));
    buttonReset.setAction(buttonCallback);
    add(buttonReset);

    textArea.setXY(48, 73);
    textArea.setColor(touchgfx::Color::getColorFromRGB(255, 208, 0));
    textArea.setLinespacing(0);
    textArea.setTypedText(touchgfx::TypedText(T___SINGLEUSE_QB9Q));
    add(textArea);

    textHighScore0.setPosition(40, 110, 161, 31);
    textHighScore0.setColor(touchgfx::Color::getColorFromRGB(255, 225, 0));
    textHighScore0.setLinespacing(0);
    Unicode::snprintf(textHighScore0Buffer, TEXTHIGHSCORE0_SIZE, "%s", touchgfx::TypedText(T___SINGLEUSE_9GVJ).getText());
    textHighScore0.setWildcard(textHighScore0Buffer);
    textHighScore0.setTypedText(touchgfx::TypedText(T___SINGLEUSE_IDV6));
    add(textHighScore0);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &buttonStart)
    {
        //Interaction1
        //When buttonStart clicked change screen to Screen2
        //Go to Screen2 with screen transition towards East
        application().gotoScreen2ScreenWipeTransitionEast();
    }
    if (&src == &buttonReset)
    {
        //Interaction2
        //When buttonReset clicked call virtual function
        //Call buttonClicked
        buttonClicked();
    }
}
